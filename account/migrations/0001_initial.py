# Generated by Django 2.2.6 on 2020-09-10 01:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Last Name')),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=13)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='What is your gender?', max_length=10)),
                ('image', models.ImageField(blank=True, default='default.png', upload_to='profile_pics')),
                ('member_from', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_me', models.TextField(blank=True, default='', max_length=2000)),
                ('mobility', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No (Work Form Home)'), ('Yes but not outstation', 'Yes but not outstation')], max_length=26)),
                ('rate', models.IntegerField(blank=True, default='0')),
                ('experience', models.CharField(blank=True, choices=[('Animation & Media', 'Animation & Media'), ('Photography & Video', 'Photography & Video'), ('Programming & Development', 'Programming & Development'), ('Graphics & Design', 'Graphics & Design'), ('Marketing', 'Marketing / Digital Marketing'), ('Hospitality', 'Hospitality (Event/Hotel Management)'), ('Soft Skills', 'Soft Skills'), ('Customer Service', 'Customer Service'), ('Legal', 'Law & Legals'), ('Lifestyle', 'Gaming/Traveling/Cooking/Cultural and etc..')], max_length=100)),
                ('course', models.CharField(blank=True, choices=[('Engineering', 'Engineering'), ('Studies of Management', 'Studies of Management'), ('Journalism And Mass Communication', 'Journalism And Mass Communication'), ('Arts And Humanities', 'Arts And Humanities'), ('Hotel & Hospitality Management', 'Hotel & Hospitality Management'), ('School Of Legal Studies', 'School Of Legal Studies'), ('(PhD) Doctor Of Philosophy', '(PhD) Doctor Of Philosophy')], max_length=30)),
                ('city', models.CharField(blank=True, choices=[('Chandigarh', 'Chandigarh'), ('Lucknow', 'Lucknow'), ('Ambala', 'Ambala'), ('Delhi', 'Delhi'), ('Noida', 'Noida'), ('Gurgaon', 'Gurgaon'), ('Rohtak', 'Rohtak'), ('Rest of India', 'Rest of India')], max_length=30)),
                ('languages', models.CharField(blank=True, max_length=500)),
                ('professional_title', taggit.managers.TaggableManager(help_text='Create your custom title tag, if not in the list.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(choices=[('Satisfied', 'Satisfied'), ('Moderate', 'Moderate'), ('Not Satisfied', 'Not Satisfied')], default='Satisfied', max_length=15)),
                ('review', models.TextField(blank=True, max_length=1000)),
                ('rating', models.IntegerField(default=1)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
                ('for_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='for_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailConfirmed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_key', models.CharField(max_length=200)),
                ('confirmed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
