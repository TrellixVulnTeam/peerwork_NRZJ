# Generated by Django 2.2.6 on 2020-09-10 01:10

import blog.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(choices=[('Animation & Media', 'Animation & Media'), ('Photography & Video', 'Photography & Video'), ('Programming & Development', 'Programming & Development'), ('Graphics & Design', 'Graphics & Design'), ('Marketing', 'Marketing / Digital Marketing'), ('Hospitality', 'Hospitality (Event/Hotel Management)'), ('Soft Skills', 'Soft Skills'), ('Customer Service', 'Customer Service'), ('Legal', 'Law & Legals'), ('Lifestyle', 'Gaming/Traveling/Cooking/Cultural and etc..')], max_length=30, verbose_name='Category of the work')),
                ('title', models.CharField(help_text='Max Length : 50 chars', max_length=50, validators=[blog.validators.validate_geeks2], verbose_name='What is your project about?')),
                ('role', models.TextField(validators=[blog.validators.validate_geeks2], verbose_name="Explain freelancer's role and requirements")),
                ('days', models.IntegerField(validators=[blog.validators.validate_days], verbose_name='Days required for project')),
                ('months', models.IntegerField(verbose_name='Months required for project')),
                ('skills_required', models.CharField(blank=True, default='', max_length=500)),
                ('benefits', models.TextField(max_length=1000, verbose_name='What are the other benefits for the employee student will gain from this project?')),
                ('currency', models.CharField(blank=True, choices=[('INR', 'INR')], default='INR', max_length=20)),
                ('budget', models.IntegerField(help_text='- MIN INR 300', validators=[blog.validators.validate_budget], verbose_name='Fixed Budget ')),
                ('requirements', models.TextField(help_text=' <br/>- Detailed explaination for your project. // Do not share any of your contact details. \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Do not promote any third party services. // MIN word 60.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t', validators=[blog.validators.validate_geeks2], verbose_name='Explain project in detail')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('terms', models.BooleanField(default='True', validators=[blog.validators.term], verbose_name='I agree to the Terms & Conditions of Peerwork.in')),
                ('paid', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('NDA', 'Working Students must sign a Non-disclosure Agreement to work on your project. They agree to keep details discussed through private messages and files/documents/code confidential.'), ('Urgent', 'Receive faster responses from skilled students and get your Project started within a day!'), ('Recruiter', "Our hands-on PRIME Recruitment service ensures you get the best students for your project. Our recruiters personally review all the proposals saving you time screening students' proposals.")], max_length=20, verbose_name='Paid Features')),
                ('slug', models.SlugField(default='', unique=True)),
                ('in_progress', models.BooleanField(blank=True, default=False)),
                ('accepted', models.BooleanField(blank=True, default=False)),
                ('sub_type', taggit.managers.TaggableManager(help_text='Selecting this field out of the main Category will deduce the chance for this project of getting Requested', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Expertise Criteria: ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
